//binary search using recursion


#include <iostream>
using namespace std;

int Binary(int arr[], int start, int end, int key) {
    if (start > end) { // Base case
        return -1;
    }
    
    int mid = (start + end) / 2; 
    
    if (arr[mid] == key) { // Compare arr[mid] with key
        return mid; // Found the key
    } 
    else if (arr[mid] > key) {
        return Binary(arr, start, mid - 1, key); // Search in the left half
    } 
    else {
        return Binary(arr, mid + 1, end, key); // Search in the right half
    }
}

int main() {
    int arr[] = {1, 2, 3, 4, 5, 6};
    int n = sizeof(arr) / sizeof(arr[0]);
    int key = 5;
    int ans = Binary(arr, 0, n - 1, key);
    cout << ans << endl; // Output the index of the key
    
    return 0;
}
